definitions:
  scripts:
    - &apply_client_assets
      name: Apply client assets
      script: |
        mkdir ${CM_BUILD_DIR}/assets/tmp
        unzip ${CM_BUILD_DIR}/assets/${CLIENT_ID}.zip -d ${CM_BUILD_DIR}/assets/tmp/
        cp -rf ${CM_BUILD_DIR}/assets/tmp/android/res/ ${CM_BUILD_DIR}/android/app/src/main/res/
        cp -rf ${CM_BUILD_DIR}/assets/tmp/ios/ ${CM_BUILD_DIR}/ios/Runner/Assets.xcassets/

workflows:
  trigger:
    triggering:
      events:
        - push
      cancel_previous_builds: true
    environment:
      groups:
        - API
    name: trigger builds for all clients    
    scripts:
      - name: Trigger multiple client builds
        script: | 
          function build_client(){ # $1 -> workflow $2 client_id $3 client_env_group
            curl --trace-ascii curl.trace -H "Content-Type: application/json" -H "x-auth-token: ${CM_API_KEY}" \
              --data '{
                  "appId": "'${CM_APP_ID}'", 
                  "workflowId": "'$1'",
                  "branch": "'${CM_BRANCH}'",
                  "environment": { 
                      "variables": { 
                          "CLIENT_ID": "'$2'"
                      },
                      "groups": [
                          "'$3'"
                      ]
                  }
                }' \
               https://api.codemagic.io/builds
          }
          CLIENTS=("ITB" "FLON") # put your clients IDs here
          for CLIENT in ${CLIENTS[@]}; do
              echo "CLIENT: $CLIENT"
              echo "APP: ${CM_APP_ID} BRANCH: ${CM_BRANCH}"
              build_client "android-workflow" $CLIENT "WL_${CLIENT}"
              build_client "ios-workflow" $CLIENT "WL_${CLIENT}"
          done
    artifacts:
      - curl.trace
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    labels:
      - ${CLIENT_ID} # Helpful when you open your Codemagic's builds page 
    environment:
      android_signing:
        - codemagic
      groups:
        - WL_ITB
      vars:
        PACKAGE_NAME: "eu.mtrack.flutterbuildtest"
        GOOGLE_PLAY_TRACK: "internal"
      flutter: stable
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Flutter Clean
        script: |
          flutter clean
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: Change Android package name
        script: | 
          flutter pub add change_app_package_name
          flutter pub run change_app_package_name:main $PACKAGE_NAME
      - *apply_client_assets
      - name: Build AAB with Flutter
        script: |
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build appbundle --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - benedikt@fuhrpark.at
        notify:
          success: true
          failure: false
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    labels:
      - ${CLIENT_ID} # Helpful when you open your Codemagic's builds page 
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: eu.mtrack
      vars:
        APP_ID: 6450677329
      flutter: stable
    scripts:
      - name: Set up code signing settings on Xcode project
        script: | 
          xcode-project use-profiles
      - name: Flutter Clean
        script: |
          flutter clean
      - name: Get Flutter packages
        script: | 
          flutter packages pub get
      - name: Install pods
        script: | 
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter analyze
        script: | 
          flutter analyze
      - name: Flutter unit tests
        script: | 
          flutter test
        ignore_failure: true
      - *apply_client_assets
      - name: Modify Pod file
        script: |
          find . -name "Podfile" -execdir echo -e "platform :ios, '11.0'\n$(cat Podfile)" > Podfile ";"
      - name: Flutter build ipa
        script: | 
          flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      - Podfile
    publishing:
      email:
        recipients:
          - benedikt@fuhrpark.at
        notify:
          success: true
          failure: false
      app_store_connect:
        auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        submit_to_testflight: true
        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false
